defaults
  mode tcp
  timeout client 10s
  timeout connect 5s
  timeout server 10s
  timeout http-request 10s
  log /dev/log local0 info
  log global
  option tcplog
  # mode http
  # option httplog
  # option logasap

frontend http
  mode http
  bind :8000

  acl is_letsencrypt path_beg /.well-known/acme-challenge/
  redirect scheme https if !is_letsencrypt

  default_backend letsencrypt

frontend https
  bind :4430 ssl crt /etc/haproxy/certs

  tcp-request inspect-delay 5s
  tcp-request content accept if { req_ssl_hello_type 1 }

  acl is_elixir_homepage req.hdr(host) -i jutonz.com
  use_backend elixir_homepage_http if is_elixir_homepage

  acl is_ruby_homepage req.hdr(host) -i app.jutonz.com
  use_backend ruby_homepage if is_ruby_homepage

  acl is_hass_sni req.ssl_sni -i hass.jutonz.com
  acl is_hass_host req.hdr(host) -i hass.jutonz.com
  use_backend hass if is_hass_sni || is_hass_host

  acl is_contacts req.hdr(host) -i contacts.jutonz.com
  use_backend contacts if is_contacts

  acl is_blockstorage req.hdr(host) -i blockstorage.jutonz.com
  use_backend blockstorage if is_blockstorage

  acl is_blockstorage_ui req.hdr(host) -i ui.blockstorage.jutonz.com
  use_backend blockstorage_ui if is_blockstorage_ui

backend elixir_homepage_http
  timeout tunnel 1h # for websockets
  server server1 192.168.1.94:4000

backend ruby_homepage
  server server2 192.168.1.94:3000

backend hass
  server server1 192.168.1.217:8123 check

backend contacts
  server server1 192.168.1.94:5232

backend blockstorage
  server server1 192.168.1.217:9000

backend blockstorage_ui
  server server1 192.168.1.217:9001

backend letsencrypt
  mode http
  server server1 localhost:8888
